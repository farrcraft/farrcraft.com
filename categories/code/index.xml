<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Code on farrcraft.com</title><link>https://farrcraft.com/categories/code/</link><description>Recent content in Code on farrcraft.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 09 Jan 2017 00:17:15 +0000</lastBuildDate><atom:link href="https://farrcraft.com/categories/code/index.xml" rel="self" type="application/rss+xml"/><item><title>AWS CodeCommit</title><link>https://farrcraft.com/blog/2017/01/09/aws-codecommit/</link><pubDate>Mon, 09 Jan 2017 00:17:15 +0000</pubDate><guid>https://farrcraft.com/blog/2017/01/09/aws-codecommit/</guid><description>The Picture So Far I’ve used a number of VCS flavors and platforms over the years. I started with CVS, moved on to SVN for a good long while, and was finally converted over to Git long after it had achieved its critical mass. I had a sourceforge account (which I loved) long before it became the reviled product it is today, flirted for a bit with beanstalk, and now use github in its public and private forms on a daily basis.</description></item><item><title>Pressing Matters</title><link>https://farrcraft.com/blog/2015/08/10/pressing-matters/</link><pubDate>Mon, 10 Aug 2015 06:50:58 +0000</pubDate><guid>https://farrcraft.com/blog/2015/08/10/pressing-matters/</guid><description>WordPress to Octopress and Back Again This site is once again running on WordPress. It’s been through many changes since its earliest incarnation as handwritten static HTML. There have been versions based on custom PHP frameworks, a pyblosxom-based variant, and most recently, the Octopress installation. Directly prior to Octopress, the site had already been using WordPress. So why did I leave and why did I come back?
What I don’t like about WordPress Its relative ease of installation and use for newcomers belies the big cumbersome application that WordPress really is underneath.</description></item><item><title>Raspberry Pi Fermentation Controller – Part 3</title><link>https://farrcraft.com/blog/2013/05/14/raspberry-pi-fermentation-controller-part-3/</link><pubDate>Tue, 14 May 2013 00:00:00 +0000</pubDate><guid>https://farrcraft.com/blog/2013/05/14/raspberry-pi-fermentation-controller-part-3/</guid><description>Part 1 and part 2 covered getting the Raspberry Pi booted up and configured with a basic software stack for developing on top of. With that out of the way, we can focus on wiring up the remaining hardware components. There will be two types of IO devices wired to the Pi – temperature sensors and SSR’s.
Temperature Sensors The temperature sensors being used are small digital thermometers which communicate using the Dallas 1-wire network protocol.</description></item><item><title>Raspberry Pi Fermentation Controller – Part 2</title><link>https://farrcraft.com/blog/2013/04/24/raspberry-pi-fermentation-controller-part-2/</link><pubDate>Wed, 24 Apr 2013 00:00:00 +0000</pubDate><guid>https://farrcraft.com/blog/2013/04/24/raspberry-pi-fermentation-controller-part-2/</guid><description>In part 1 I walked through getting the Raspberry Pi initially up and running. Once you’re logged in, you can immediately start hooking up sensors and start polling them directly from the command line. However, you’re likely going to want some more software installed for additional tasks. For my fermentation controller, I’ve decided on the following software stack.
Software Stack Graphite StatsD Node.js MongoDB All of the data read from sensors along with GPIO state changes will all be recorded in Graphite.</description></item><item><title>Raspberry Pi Fermentation Controller – Part 1</title><link>https://farrcraft.com/blog/2013/04/20/raspberry-pi-fermentation-controller-part-1/</link><pubDate>Sat, 20 Apr 2013 00:00:00 +0000</pubDate><guid>https://farrcraft.com/blog/2013/04/20/raspberry-pi-fermentation-controller-part-1/</guid><description>The Raspberry Pi is a cheap single-board computer with generic IO features which make it ideal for brewery automation projects. The BrewPi project is just one example. I decided to assemble a similar project with the goal of being able to monitor, log, and control the fermentation temperature of two 5-6 gallon carboys of fermenting beer.
Parts List Raspberry Pi SD Card WiFi Adapter SD Card Reader Micro USB Power Adapter Network cable Bootstrapping The Raspberry Pi board by itself isn’t actually enough to do anything with.</description></item></channel></rss>